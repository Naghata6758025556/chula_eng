# -*- coding: utf-8 -*-
"""thaicons.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1UoeQeO9gXccdiIbLW-ZOpzPXeLVqvoE4
"""

import tkinter as tk
from tkinter import ttk

# Thai consonants and their names
consonants = [
    ("ก", "gor kai"), ("ข", "khor khai"), ("ค", "khor khwai"), ("ง", "ngor ngu"),
    ("จ", "jor jan"), ("ฉ", "chor ching"), ("ช", "chor chang"), ("ซ", "sor so"),
    ("ญ", "yor ying"), ("ฎ", "dor chada"), ("ฏ", "tor patak"), ("ฐ", "thor than"),
    ("ท", "thor thahan"), ("พ", "phor phan"), ("ฟ", "for fan"), ("ม", "mor ma"),
    ("ร", "ror rua"), ("ล", "lor ling"), ("ว", "wor waen"), ("ส", "sor suea"),
    ("ห", "hor hip"), ("อ", "or ang")
]

class FlashcardApp:
    def __init__(self, root):
        self.root = root
        self.root.title("Thai Consonant Flashcards")
        self.root.geometry("400x300")

        self.index = 0
        self.show_name = False

        # Flashcard display
        self.card_frame = ttk.Frame(root)
        self.card_frame.pack(expand=True)

        self.label = tk.Label(self.card_frame, text=consonants[self.index][0], font=("Arial", 50), width=5, height=2, relief="ridge", bg="white")
        self.label.pack(pady=40)
        self.label.bind("<Button-1>", self.flip_card)

        # Navigation buttons
        self.button_frame = ttk.Frame(root)
        self.button_frame.pack()

        self.prev_button = ttk.Button(self.button_frame, text="Previous", command=self.prev_card)
        self.prev_button.grid(row=0, column=0, padx=10, pady=10)

        self.next_button = ttk.Button(self.button_frame, text="Next", command=self.next_card)
        self.next_button.grid(row=0, column=1, padx=10, pady=10)

    def flip_card(self, event):
        if self.show_name:
            self.label.config(text=consonants[self.index][0])
        else:
            self.label.config(text=consonants[self.index][1])
        self.show_name = not self.show_name

    def next_card(self):
        self.index = (self.index + 1) % len(consonants)
        self.update_card()

    def prev_card(self):
        self.index = (self.index - 1) % len(consonants)
        self.update_card()

    def update_card(self):
        self.show_name = False
        self.label.config(text=consonants[self.index][0])

if __name__ == "__main__":
    root = tk.Tk()
    app = FlashcardApp(root)
    root.mainloop()